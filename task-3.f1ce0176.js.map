{"version":3,"sources":["js/task-3.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","id","time","delay","Promise","resolve","reject","setTimeout","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";;;AA2CA,aA3CA,QAAA,qBAKA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkB,EAAGC,GAAAA,EAAIC,KAAAA,MACvBC,MAAAA,EAAQT,EAA0B,IAAK,KACtC,OAAA,IAAIU,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACQV,KAAKE,SAAW,GAEjCM,EAAQ,CAAEJ,GAAAA,EAAIE,MAAAA,IAEdG,EAAO,CAACL,GAAAA,KAETE,MAICK,EAAa,EAAEP,GAAAA,EAAIE,MAAAA,MACvBM,QAAQC,mBAAmBT,kBAAmBE,QAG1CQ,EAAW,EAAEV,GAAAA,MACjBQ,QAAQG,qCAAqCX,+BAG/CD,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETX,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ,GAETX,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,KAC/BC,KAAKN,GACLO,MAAMJ,GAETX,EAAgB,CAAEC,GAAI,GAAIY,OAAQ,MAC/BC,KAAKN,GACLO,MAAMJ","file":"task-3.f1ce0176.js","sourceRoot":"../src","sourcesContent":["import '../css/styles.css';\n\n// Перепиши функцию makeTransaction() так, чтобы она не использовала callback-функции onSuccess и onError,\n// а принимала всего один параметр transaction и возвращала промис.\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = ({ id, time}) => {\n  const delay = randomIntegerFromInterval(200, 500);\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n    if (canProcess) {\n      resolve({ id, delay});\n    } else {\n      reject({id});\n    }\n  }, delay);\n});\n };\n\nconst logSuccess = ({id, delay}) => {\n  console.log(`Transaction ${id} processed in ${delay}ms`);\n};\n\nconst logError = ({id}) => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);"]}