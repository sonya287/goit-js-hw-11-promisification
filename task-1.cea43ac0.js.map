{"version":3,"sources":["js/task-1.js"],"names":["delay","ms","time","Promise","resolve","reject","setTimeout","logger","console","log","then"],"mappings":";;;AAkBA,aAlBA,QAAA,qBAKA,MAAMA,EAAQC,IACJC,MAAAA,EAAOD,EACN,OAAA,IAAIE,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACPF,EAAQF,IACDD,MAIXM,EAASL,GAAQM,QAAQC,sBAAsBP,OAErDF,EAAM,KAAMU,KAAKH,GACjBP,EAAM,KAAMU,KAAKH,GACjBP,EAAM,MAAMU,KAAKH","file":"task-1.cea43ac0.js","sourceRoot":"../src","sourcesContent":["import '../css/styles.css';\n\n// Напиши функцию delay(ms), которая возвращает промис, переходящий в состояние \"resolved\" через ms миллисекунд.\n// Значением исполнившегося промиса должно быть то кол - во миллисекунд которое передали во время вызова функции delay.\n\nconst delay = ms => {\n    const time = ms;\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n          resolve(time);\n              }, ms);\n    })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\ndelay(2000).then(logger); \ndelay(1000).then(logger); \ndelay(1500).then(logger); "]}